name: CI
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  trivy:
    # Uncomment if upload sarif is needed
    # permissions:
    #   contents: read # for actions/checkout to fetch code
    #   security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    #   actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Scan repo with trivy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy.yaml
          ignore-unfixed: true
          exit-code: '1'
          # format: 'sarif'
          # output: 'trivy-results.sarif'

    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v3
    #   with:
    #     sarif_file: 'trivy-results.sarif'

  test:
    name: Test python ${{ matrix.py }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run test suite
        run: tox r -e py${{ matrix.py }} -vv -- -v

  checkStyle:
    name: tox env ${{ matrix.tox_env }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        tox_env:
          - type
          - lint
          - format
          - docs
          - bandit
          - pre-commit
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run test suite
        run: tox r -e ${{ matrix.tox_env }} -vv -- -v
