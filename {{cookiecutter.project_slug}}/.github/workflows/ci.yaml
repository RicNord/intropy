name: CI
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - release

concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}
  cancel-in-progress: true

jobs:
{%- if cookiecutter.project_type == 'Application' %}
  requirementsCheck:
    name: 'Requirements check'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Check if requirements diff from pipenv and requirements.txt files
        run: |
          pipenv requirements | sed '/^-i /d' | diff --color=auto requirements/requirements.txt -
          pipenv requirements --dev-only | sed '/^-i /d' | diff --color=auto requirements/requirements-dev.txt -
          pipenv requirements --categories docs | sed '/^-i /d' | diff --color=auto requirements/requirements-docs.txt -
          pipenv requirements --categories style | sed '/^-i /d' | diff --color=auto requirements/requirements-style.txt -
{%- endif %}

  test:
    name: Test python {% raw %}${{ matrix.py }} on ${{ matrix.os }}{% endraw %}
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      fail-fast: false
      matrix:
        py:
{%- if cookiecutter.project_type == 'Application' %}
          - "3.12"
{%- elif cookiecutter.project_type == 'Library' %}
          - "3.12"
          - "3.11"
          - "3.10"
{%- endif %}
        os:
{%- if cookiecutter.project_type == 'Application' %}
          - ubuntu-latest
{%- elif cookiecutter.project_type == 'Library' %}
          - ubuntu-latest
          - windows-latest
          - macos-latest
{%- endif %}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python {% raw %}${{ matrix.py }}{% endraw %}
        uses: actions/setup-python@v5
        with:
          python-version: {% raw %}${{ matrix.py }}{% endraw %}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run test suite
        run: tox r -e py{% raw %}${{ matrix.py }}{% endraw %} -vv -- -v

  checkStyle:
    name: tox env {% raw %}${{ matrix.tox_env }} on ${{ matrix.os }}{% endraw %}
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      fail-fast: false
      matrix:
        tox_env:
          - type
          - lint
          - format
          - docs
          - pre-commit
        os:
{%- if cookiecutter.project_type == 'Application' %}
          - ubuntu-latest
{%- elif cookiecutter.project_type == 'Library' %}
          - ubuntu-latest
          - windows-latest
          - macos-latest
{%- endif %}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run test suite
        run: tox r -e {% raw %}${{ matrix.tox_env }}{% endraw %} -vv -- -v
